URL: https://github.com/meltwater/drone-cache/blob/71d4f8a93d41453308068a2f2fff6084031e256d/DOCS.md
Snippet:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
--------------------------------------------------
URL: https://github.com/WithSecureLabs/awspx/blob/b5eec7448930e042aeb61723d37cd2f38d7483db/INSTALL
Snippet:
    fi

    docker exec -it \
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        -e AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
        -e AWS_SECURITY_TOKEN=$AWS_SECURITY_TOKEN \
--------------------------------------------------
URL: https://github.com/RoseSecurity/Red-Teaming-TTPs/blob/30f795dd32bb241fadca8c742a6ea12ae1de224e/Cloud.md
Snippet:
```sh
inurl:pastebin "AWS_ACCESS_KEY"
```
--------------------------------------------------
URL: https://github.com/MicroPyramid/opensource-job-portal/blob/61ad13d5d0158a75a7ab8564ffe69495ea67ffef/ENV.md
Snippet:
## AWS keys

AWS_STORAGE_BUCKET_NAME=""
AWS_ACCESS_KEY=''
AWS_SECRET_KEY=''
CLOUDFRONT_DOMAIN = ""
CLOUDFRONT_ID=''
--------------------------------------------------
URL: https://github.com/ecmwf/climetlab/blob/a55f9c8590c2ede64a2b0fdc1b163501c81a34f9/HOWTO.md
Snippet:
```
host_base = object-store.os-api.cci1.ecmwf.int
host_bucket =
access_key = xxxxxxxxxxxx
secret_key = yyyyyyyyyyyy
use_https = True
```
--------------------------------------------------
URL: https://github.com/visual-layer/fastdup/blob/c5b8f09c6da5084da629739e8dee95d32429f417/CLOUD.md
Snippet:
```
For example for google cloud:
```
/usr/bin/mc alias set google  https://storage.googleapis.com/ <access_key> <secret_key> 
```
Make sure the bucket is accessible using the command:
```
--------------------------------------------------
URL: https://github.com/code-corps/code-corps-api/blob/e8520c69fec36725b4e949de1185464279f6b693/USAGE.md
Snippet:

In your `.env` you'll need the following:

- `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` are your credentials, typically generated from AWS IAM (identity management)
- `CLOUDFRONT_DOMAIN` should be the domain name of your CloudFront instance that sits in front of your S3 bucket
- `S3_BUCKET` should be the bucket you'll be uploading files to

--------------------------------------------------
URL: https://github.com/denizalti/openreplica/blob/5a51ba2b475f44da221304ea7f0b9118f2e8511a/README
Snippet:
Route53 records every time the view of the system changes.

To use the Name Server to update Amazon Route53, you should provide
your AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY. You can retrieve
these from the AWS Console (http://console.aws.amazon.com/iam), by
looking under the security credentials of the username that you used
while creating the Hosted Zone for your domain name. Once you have the
--------------------------------------------------
URL: https://github.com/shadowabi/S-BlastingDictionary/blob/f8927e54af048f245d1af06dfd5bc988b580a398/JNDI.txt
Snippet:
${java:vm}
${bundle:application:spring.datasource.password}
${env:USERDOMAIN}
${env:AWS_SECRET_ACCESS_KEY}
${ctx:loginId}
${map:type}
${filename}
--------------------------------------------------
URL: https://github.com/jimmynicol/image-resizer/blob/ae6c7b36d822b0a92d1ee382383b4c29eab0b8c8/README.md
Snippet:

    heroku config:set AWS_ACCESS_KEY_ID=abcd1234

--------------------------------------------------
